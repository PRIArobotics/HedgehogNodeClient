.template 0
 ignorecase = 0

 function add_import
   for module.import where name = "$(class->message.package)_pb"
   else
     new module.import
       import.name = "$(class->message.package)_pb"
     endnew
   endfor
 endfunction

 for class
   add_import()
   class->message.full_name = "$(->message.package)_pb.$(->message.name)"
   class.decorator = "$(string.replace(type, "req|RequestMsg,rep|ReplyMsg,upd|ReplyMsg")).message"
   class.Superclass = "SimpleMessage"
 endfor

 for complex
   complex->message.full_name = "$(->message.package)_pb.$(->message.name)"
   complex.Msg = string.replace(dir, "req|RequestMsg,rep|ReplyMsg")
   complex.parse_name = "parse$(id?:Pascal)$(string.replace(dir, "req|Request,rep|Reply"))From"

   for class
     add_import()
     class->message.full_name = "$(->message.package)_pb.$(->message.name)"
     class.decorator = "message"
     class.Superclass = "Message"
   endfor
 endfor
.endtemplate
.template 1
import "babel-polyfill";

import { RequestMsg, ReplyMsg, message, PayloadCase, Message, ProtoContainerMessage } from './index';
.for import
let $(name): any = require('../proto/$(name)');
.endfor
.for class

.  gsl from "gsl/typescript_class"
.endfor
.for complex
.  for class

.    gsl from "gsl/typescript_class"
.  endfor

.  gsl from "gsl/typescript_parser"
.endfor
.endtemplate
