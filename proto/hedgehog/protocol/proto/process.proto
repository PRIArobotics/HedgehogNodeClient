syntax = "proto3";

package hedgehog.protocol.proto;

option java_package = "at.pria.hedgehog.protocol.proto";
option java_outer_classname = "ProcessP";

// TODO allow environment variables

enum ProcessFileno {
    STDIN = 0;
    STDOUT = 1;
    STDERR = 2;
}

// Invoke a process on the controller
//
// => (*args, [working_dir]):  process execute action => process execute reply
message ProcessExecuteAction {
    repeated string args = 2;
    string working_dir = 1;
}

// Reply with the process' PID for communication purposes
//
// <= (pid):                 process execute reply
message ProcessExecuteReply {
    uint32 pid = 1;
}

// send data to/receive data from a process' file streams
//
// => (pid, fileno, chunk):  stream data action => ack
// <- (pid, fileno, chunk):  stream data update
message ProcessStreamMessage {
    uint32 pid = 1;
    //must be STDIN for actions, as only STDIN is writable
    //can't be STDIN for updates, as STDIN is not readable
    ProcessFileno fileno = 2;
    //for actions, an empty chunk closes the stream
    //for update, an empty chunk closes signals EOF
    bytes chunk = 3;
}

// Send signal to a process
//
// => (pid, signal):         process signal action => ack
message ProcessSignalAction {
    uint32 pid = 1;
    uint32 signal = 2;
}

// Signals that the process has exited
//
// <- (pid, exit_code):      process exit update
message ProcessExitUpdate {
    uint32 pid = 1;
    int32 exit_code = 2;
}
