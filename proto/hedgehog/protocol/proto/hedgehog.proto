syntax = "proto3";

package hedgehog.protocol.proto;

option java_package = "at.pria.hedgehog.protocol.proto";
option java_outer_classname = "HedgehogP";

import "hedgehog/protocol/proto/ack.proto";
import "hedgehog/protocol/proto/io.proto";
import "hedgehog/protocol/proto/motor.proto";
import "hedgehog/protocol/proto/servo.proto";
import "hedgehog/protocol/proto/process.proto";

// <default GSL customizable: module-extras />

// `HedgehogMessage` represents a message of any kind of the Hedgehog protocol.
message HedgehogMessage {
    // Contains any one of the different Hedgehog commands.
    // See their respective files for command information.
    oneof payload {
        // ack.proto
        Acknowledgement acknowledgement = 1;
        // io.proto
        IOAction io_action = 2;
        IOCommandMessage io_command_message = 16;
        AnalogMessage analog_message = 3;
        DigitalMessage digital_message = 4;
        // motor.proto
        MotorAction motor_action = 5;
        MotorCommandMessage motor_command_message = 17;
        MotorStateMessage motor_state_message = 6;
        MotorSetPositionAction motor_set_position_action = 18;
        // servo.proto
        ServoAction servo_action = 7;
        ServoCommandMessage servo_command_message = 19;
        // process.proto
        ProcessExecuteAction process_execute_action = 20;
        ProcessExecuteReply process_execute_reply = 21;
        ProcessStreamMessage process_stream_message = 8;
        ProcessSignalAction process_signal_action = 22;
        ProcessExitUpdate process_exit_update = 23;
    }
}
